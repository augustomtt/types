name: Types Integration & Delivery
on:
  push:
    branches: [ main ]
    paths:
      - './*gradle*'
      - .github/workflows/types-integration-delivery.yml
      - buildSrc/**/*.kt*
      - types/**/*.kt*
  workflow_dispatch:
permissions: read-all
env:
  CACHING: gradle
  GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
  GIT_USER: ${{ secrets.GIT_USER }}
  GPG_PASSWORD: ${{ secrets.GPG_PASSWORD }}
  GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
  JAVA_DISTRIBUTION: adopt
  JAVA_VERSION: 8
  MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
  MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
jobs:
  # ---------- Stage 1 ----------
  validate-wrapper:
    name: Validate Gradle wrapper
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1.0.5
  # ---------- Stage 2 ----------
  integrate-jvm:
    name: Integrate changes (JVM)
    runs-on: ubuntu-latest
    needs: validate-wrapper
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0
      - name: Setup Java & Gradle
        uses: actions/setup-java@v3.6.0
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: ${{ env.CACHING }}
      - name: Run tests
        run: ./gradlew types:jvmTest --no-daemon
  integrate-js:
    name: Integrate changes (JS)
    runs-on: ubuntu-latest
    needs: validate-wrapper
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0
      - name: Setup Java & Gradle
        uses: actions/setup-java@v3.6.0
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: ${{ env.CACHING }}
      - name: Run tests
        run: ./gradlew types:jsTest --no-daemon
  integrate-linux:
    name: Integrate changes (Linux)
    runs-on: ubuntu-latest
    needs: validate-wrapper
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0
      - name: Setup Java & Gradle
        uses: actions/setup-java@v3.6.0
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: ${{ env.CACHING }}
      - name: Run tests
        run: ./gradlew types:linuxX64Test --no-daemon
  integrate-macos:
    name: Integrate changes (macOS)
    runs-on: macos-latest
    needs: validate-wrapper
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0
      - name: Setup Java & Gradle
        uses: actions/setup-java@v3.6.0
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: ${{ env.CACHING }}
      - name: Run tests
        run: ./gradlew types:macosX64Test --no-daemon
  integrate-windows:
    name: Integrate changes (Windows)
    runs-on: windows-latest
    needs: validate-wrapper
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0
      - name: Setup Java & Gradle
        uses: actions/setup-java@v3.6.0
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: ${{ env.CACHING }}
      - name: Run tests
        run: ./gradlew types:mingwX64Test --no-daemon
  # ---------- Stage 3 ----------
  deliver-kmp:
    name: Deliver package to OSSRH (Multiplatform)
    runs-on: ubuntu-latest
    needs:
      - integrate-jvm
      - integrate-js
      - integrate-linux
      - integrate-macos
      - integrate-windows
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0
      - name: Setup Java & Gradle
        uses: actions/setup-java@v3.6.0
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: ${{ env.CACHING }}
      - name: Deliver package
        run: ./gradlew types:publishKotlinMultiplatformPublicationToOSSRHRepository --no-daemon
  deliver-jvm:
    name: Deliver package to OSSRH (JVM)
    runs-on: ubuntu-latest
    needs: integrate-jvm
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0
      - name: Setup Java & Gradle
        uses: actions/setup-java@v3.6.0
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: ${{ env.CACHING }}
      - name: Deliver package
        run: ./gradlew types:publishJvmPublicationToOSSRHRepository --no-daemon
  deliver-js:
    name: Deliver package to OSSRH (JS)
    runs-on: ubuntu-latest
    needs: integrate-js
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0
      - name: Setup Java & Gradle
        uses: actions/setup-java@v3.6.0
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: ${{ env.CACHING }}
      - name: Deliver package
        run: ./gradlew types:publishJsPublicationToOSSRHRepository --no-daemon
  deliver-linux:
    name: Deliver package to OSSRH (Linux)
    runs-on: ubuntu-latest
    needs: integrate-linux
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0
      - name: Setup Java & Gradle
        uses: actions/setup-java@v3.6.0
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: ${{ env.CACHING }}
      - name: Deliver package
        run: ./gradlew types:publishLinuxX64PublicationToOSSRHRepository --no-daemon
  deliver-macos:
    name: Deliver package to OSSRH (macOS)
    runs-on: macos-latest
    needs: integrate-macos
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0
      - name: Setup Java & Gradle
        uses: actions/setup-java@v3.6.0
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: ${{ env.CACHING }}
      - name: Deliver package
        run: ./gradlew types:publishMacosX64PublicationToOSSRHRepository --no-daemon
  deliver-windows:
    name: Deliver package to OSSRH (Windows)
    runs-on: windows-latest
    needs: integrate-windows
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0
      - name: Setup Java & Gradle
        uses: actions/setup-java@v3.6.0
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: ${{ env.CACHING }}
      - name: Deliver package
        run: ./gradlew types:publishMingwX64PublicationToOSSRHRepository --no-daemon

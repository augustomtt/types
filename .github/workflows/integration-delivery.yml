name: Integration & Delivery
on:
  push:
    branches: [ main ]
    paths:
      - '*.kts'
      - '*gradle*'
      - .github/workflows/integration-delivery.yml
      - buildSrc/**
      - src/**
  workflow_dispatch:
permissions: read-all
env:
  GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
  GIT_USER: ${{ secrets.GIT_USER }}
  GPG_PASSWORD: ${{ secrets.GPG_PASSWORD }}
  GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
  MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
  MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
jobs:
  # ---------- Stage 1 ----------
  validate-wrapper:
    name: Validate Gradle wrapper
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1.0
  # ---------- Stage 2 ----------
  integrate-jvm:
    name: Integrate changes (JVM)
    runs-on: ubuntu-latest
    needs: validate-wrapper
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run tests
        run: ./gradlew jvmTest --no-daemon
  integrate-js:
    name: Integrate changes (JS)
    runs-on: ubuntu-latest
    needs: validate-wrapper
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run tests
        run: ./gradlew jsIrTest jsLegacyTest --no-daemon
  integrate-linux:
    name: Integrate changes (Linux)
    runs-on: ubuntu-latest
    needs: validate-wrapper
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run tests
        run: ./gradlew linuxX64Test --no-daemon
  integrate-macos:
    name: Integrate changes (macOS)
    runs-on: macos-latest
    needs: validate-wrapper
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run tests
        run: ./gradlew macosX64Test --no-daemon
  integrate-windows:
    name: Integrate changes (Windows)
    runs-on: windows-latest
    needs: validate-wrapper
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run tests
        run: ./gradlew mingwX64Test --no-daemon
  # ---------- Stage 3 ----------
  deliver-jvm:
    name: Deliver package to OSSRH (JVM)
    runs-on: ubuntu-latest
    needs: integrate-jvm
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Deliver package
        run: ./gradlew publishJvmPublicationToOSSRHRepository --no-daemon
  deliver-js:
    name: Deliver package to OSSRH (JS)
    runs-on: ubuntu-latest
    needs: integrate-js
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Deliver package
        run: ./gradlew publishJsPublicationToOSSRHRepository --no-daemon
  deliver-linux:
    name: Deliver package to OSSRH (Linux)
    runs-on: ubuntu-latest
    needs: integrate-linux
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Deliver package
        run: ./gradlew publishLinuxX64PublicationToOSSRHRepository --no-daemon
  deliver-macos:
    name: Deliver package to OSSRH (macOS)
    runs-on: macos-latest
    needs: integrate-macos
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Deliver package
        run: ./gradlew publishMacosX64PublicationToOSSRHRepository --no-daemon
  deliver-windows:
    name: Deliver package to OSSRH (Windows)
    runs-on: windows-latest
    needs: integrate-windows
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Deliver package
        run: ./gradlew publishMingwX64PublicationToOSSRHRepository --no-daemon
